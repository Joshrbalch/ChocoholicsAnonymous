michaelorscheln

Short Paragraph:
Every member has plastic card with name and 9 digit member number. Each provider has a computer terminal. When computer terminal is turned on, provider is prompted to enter in their provider number. When member card is swiped at terminal, it checks if the 9 digit member number is valid with the ChocAn Data Center.
If valid, displayed "Validated",
    Input — Service Date — MM-DD-YYYY
    Input — Service Code (6-digit) — XXXXXX
    if /*correct*/ {
    Output — Service Name — 1-20characters
    Input — Correct Service? — Y/N
    }
    else { /*Error Message*/
    Current date and time (MM–DD–YYYY HH:MM:SS).
    Date service was provided (MM–DD–YYYY).
    Provider number (9 digits).
    Member number (9 digits).
    Service code (6 digits).
    Comments (100 characters) (optional).
    }
else display "Invalid Number or Member suspended"

Glossary:
    -Member: Actor who is paying for ChocAn service, includes member card with 9digit number
    -Provider: Actor (Health Care Professional) who is providing ChocAn service, includes a computer terminal, a provider #
Data Structures:
    Current & ServiceDate
    -Date: MM-DD-YYYY
        -time: HH:MM:SS
    Provider
        string providerNum[9]
        string providerName[25]
        string address[25]
    Member#
        string memberNum[9]
        string name[25]
        string address[25]
        string city[14]
        string state[2]
        string zip[5]
    Service
        string code[6]
        string serviceName[20]
        double serviceFee
        int numConsultations
        double weekFee
        function weekFee(double addFee)
        Date
        Provider provider.name
    PersonInfo
        bool isProvider 1=provider, 0=member
        string name[25]
        string address[25]
        string city[14]
        string state[2]
        string zip[5]

Use Case Diagram (UMLetino):
    Case 1: Member validation
    Case 2: Billing Transaction
    Case 3: Email-to-member
    Case 4: ProviderReport
        Provider
        Service
    Case 5: Provider Directory
    Case 6: Write to disk

Use Case Descriptions:

Liam- Service Code lookup and verification
Katie- Main Accounting procedure
Brodye- Update Data Records
Evan- Interactive Mode
Michael-Directory Use Case
Josh- Member Validation

Use case: Directory Use Case
Context: Provider uses Provider Directory to look up appropriate 6-digit service code for correct service. Provider inputs code. To check if code is correct, the terminal displays the name of service (20 chars) and provider has to verify it is the correct service. If provider has entered incorrect code/nonexisent code, an error message is printed
Actors: Provider
Main Success Scenario: Provider enters correct service code, displays name of service, then verifies it it is correct and then writes the record to the disk.
1 Look up service code for service provided Provider input service code
 1.1: Write step 1.1.
2: Display name of input service code
3: Ask provider to verify if name is correct service
    3.1:
4. Write record of service to disk with
Current date and time (MM–DD–YYYY HH:MM:SS).
 Date service was provided (MM–DD–YYYY).
 Provider number (9 digits).
 Member number (9 digits).
 Service code (6 digits).
 Comments (100 characters) (optional). 

Extensions: Possible alternatives to the steps you may think of
(e.g., what happens if something goes wrong at this step), such as:
 1a. Instead of step 1
 3a. Instead of step 3.
 3b. Other alternative to step 3


 USE CASES:
 Actors:
    Provider
        (A) Member Validation
        (B) Billing Procedure — includes (A) Member Validation 
        (F) Weekly Accounting Procedure
        (C) Manager Request Accounting Procedure (Report)
    Operator
        (D) Member Management
        (E) Provider Management
    Timer
        (F) Weekly Accounting Procedure
    Manager
        (C) Manager Request Accounting Procedure (Report)
        (F) Weekly Accounting Procedure
